!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? t(exports) : typeof define === 'function' && define.amd ? define(['exports'], t) : t((e = e || self).React = {}); }(this, (i) => {
  let v = 60103; let b = 60106; i.Fragment = 60107, i.StrictMode = 60108, i.Profiler = 60114; let u = 60109; let c = 60110; let l = 60112; i.Suspense = 60113; let s = 60120; let f = 60115; let p = 60116; let d = 60121; let t = 60122; let n = 60117; let r = 60129; let o = 60131; typeof Symbol === 'function' && Symbol.for && (v = (M = Symbol.for)('react.element'), b = M('react.portal'), i.Fragment = M('react.fragment'), i.StrictMode = M('react.strict_mode'), i.Profiler = M('react.profiler'), u = M('react.provider'), c = M('react.context'), l = M('react.forward_ref'), i.Suspense = M('react.suspense'), s = M('react.suspense_list'), f = M('react.memo'), p = M('react.lazy'), d = M('react.block'), t = M('react.server.block'), n = M('react.fundamental'), M('react.scope'), M('react.opaque.id'), r = M('react.debug_trace_mode'), M('react.offscreen'), o = M('react.legacy_hidden')); const a = typeof Symbol === 'function' && Symbol.iterator; const y = '@@iterator'; function g(e) { if (e === null || typeof e !== 'object') return null; e = a && e[a] || e[y]; return typeof e === 'function' ? e : null; } const m = Object.prototype.hasOwnProperty; const h = Object.assign || function (e, t) { if (e == null) throw new TypeError('Object.assign target cannot be null or undefined'); for (var n = Object(e), r = 1; r < arguments.length; r++) { const o = arguments[r]; o != null && (function (e, t) { for (const n in t)m.call(t, n) && (e[n] = t[n]); }(n, Object(o))); } return n; }; const _ = {current: null}; var e = {transition: 0}; const w = {current: null}; const k = {}; let C = null; function R(e) { C = e; }k.setExtraStackFrame = function (e) { C = e; }, k.getCurrentStack = null; var S = {current: !(k.getStackAddendum = function () { let e = ''; C && (e += C); const t = k.getCurrentStack; return t && (e += t() || ''), e; })}; const j = {
    ReactCurrentDispatcher: _, ReactCurrentBatchConfig: e, ReactCurrentOwner: w, IsSomeRendererActing: S, assign: h,
  }; function P(e) { for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)n[r - 1] = arguments[r]; x('warn', e, n); } function O(e) { for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)n[r - 1] = arguments[r]; x('error', e, n); } function x(e, t, n) { const r = j.ReactDebugCurrentFrame.getStackAddendum(); r !== '' && (t += '%s', n = n.concat([r])); n = n.map(e => `${e}`); n.unshift(`Warning: ${t}`), Function.prototype.apply.call(console[e], console, n); }j.ReactDebugCurrentFrame = k; const E = {}; function T(e, t) { var n = e.constructor; var e = n && (n.displayName || n.name) || 'ReactClass'; var n = `${e}.${t}`; E[n] || (O("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", t, e), E[n] = !0); } const $ = {
    isMounted(e) { return !1; }, enqueueForceUpdate(e, t, n) { T(e, 'forceUpdate'); }, enqueueReplaceState(e, t, n, r) { T(e, 'replaceState'); }, enqueueSetState(e, t, n, r) { T(e, 'setState'); },
  }; const I = {}; function F(e, t, n) { this.props = e, this.context = t, this.refs = I, this.updater = n || $; }Object.freeze(I), F.prototype.isReactComponent = {}, F.prototype.setState = function (e, t) { if (typeof e !== 'object' && typeof e !== 'function' && e != null) throw Error('setState(...): takes an object of state variables to update or a function which returns an object of state variables.'); this.updater.enqueueSetState(this, e, t, 'setState'); }, F.prototype.forceUpdate = function (e) { this.updater.enqueueForceUpdate(this, e, 'forceUpdate'); }; let D; const W = {isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.'], replaceState: ['replaceState', 'Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).']}; for (D in W)W.hasOwnProperty(D) && (function (e, t) { Object.defineProperty(F.prototype, e, {get() { P('%s(...) is deprecated in plain JavaScript React classes. %s', t[0], t[1]); }}); }(D, W[D])); function A() {} function N(e, t, n) { this.props = e, this.context = t, this.refs = I, this.updater = n || $; }A.prototype = F.prototype; var M = N.prototype = new A(); function z(e) { return e.displayName || 'Context'; } function L(e) { if (e == null) return null; if (typeof e.tag === 'number' && O('Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.'), typeof e === 'function') return e.displayName || e.name || null; if (typeof e === 'string') return e; switch (e) { case i.Fragment: return 'Fragment'; case b: return 'Portal'; case i.Profiler: return 'Profiler'; case i.StrictMode: return 'StrictMode'; case i.Suspense: return 'Suspense'; case s: return 'SuspenseList'; } if (typeof e === 'object') switch (e.$$typeof) { case c: return `${z(e)}.Consumer`; case u: return `${z(e._context)}.Provider`; case l: return o = (r = e).render, a = 'ForwardRef', o = o.displayName || o.name || '', r.displayName || (o !== '' ? `${a}(${o})` : a); case f: return L(e.type); case d: return L(e._render); case p: var t = e._payload; var n = e._init; try { return L(n(t)); } catch (e) { return null; } } let r; let o; let a; return null; }M.constructor = N, h(M, F.prototype), M.isPureReactComponent = !0; let U; let q; let V; const Y = Object.prototype.hasOwnProperty; const B = {
    key: !0, ref: !0, __self: !0, __source: !0,
  }; function H(e) { if (Y.call(e, 'ref')) { const t = Object.getOwnPropertyDescriptor(e, 'ref').get; if (t && t.isReactWarning) return; } return void 0 !== e.ref; } function J(e) { if (Y.call(e, 'key')) { const t = Object.getOwnPropertyDescriptor(e, 'key').get; if (t && t.isReactWarning) return; } return void 0 !== e.key; } const X = function (e, t, n, r, o, a, u) {
    a = {
      $$typeof: v, type: e, key: t, ref: n, props: u, _owner: a, _store: {},
    }; return Object.defineProperty(a._store, 'validated', {
      configurable: !1, enumerable: !1, writable: !0, value: !1,
    }), Object.defineProperty(a, '_self', {
      configurable: !1, enumerable: !1, writable: !1, value: r,
    }), Object.defineProperty(a, '_source', {
      configurable: !1, enumerable: !1, writable: !1, value: o,
    }), Object.freeze && (Object.freeze(a.props), Object.freeze(a)), a;
  }; function Q(e, t, n) { let r; let o; let a; const u = {}; let i = null; let c = null; let l = null; let s = null; if (t != null) for (r in H(t) && (c = t.ref, typeof (o = t).ref === 'string' && w.current && o.__self && w.current.stateNode !== o.__self && (a = L(w.current.type), V[a] || (O('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', a, o.ref), V[a] = !0))), J(t) && (i = `${t.key}`), l = void 0 === t.__self ? null : t.__self, s = void 0 === t.__source ? null : t.__source, t)Y.call(t, r) && !B.hasOwnProperty(r) && (u[r] = t[r]); let f; let p; let d; const y = arguments.length - 2; if (y == 1)u.children = n; else if (y > 1) { for (var m = Array(y), h = 0; h < y; h++)m[h] = arguments[h + 2]; Object.freeze && Object.freeze(m), u.children = m; } if (e && e.defaultProps) { const v = e.defaultProps; for (r in v) void 0 === u[r] && (u[r] = v[r]); } function b() { q || (q = !0, O('%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)', f)); } function g() { U || (U = !0, O('%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)', d)); } return (i || c) && (n = typeof e === 'function' ? e.displayName || e.name || 'Unknown' : e, i && (p = u, d = n, g.isReactWarning = !0, Object.defineProperty(p, 'key', {get: g, configurable: !0})), c && (p = u, f = n, b.isReactWarning = !0, Object.defineProperty(p, 'ref', {get: b, configurable: !0}))), X(e, i, c, l, s, w.current, u); } function G(e) { return typeof e === 'object' && e !== null && e.$$typeof === v; } const K = '.'; const Z = ':'; let ee = !(V = {}); const te = /\/+/g; function ne(e) { return e.replace(te, '$&/'); } function re(e, t) { return typeof e === 'object' && e !== null && e.key != null ? (e = `${e.key}`, n = {'=': '=0', ':': '=2'}, `$${e.replace(/[=:]/g, e => n[e])}`) : t.toString(36); let n; } function oe(e, t, n, r, o) { let a = typeof e; a != 'undefined' && a != 'boolean' || (e = null); let u; var i = !1; if (e === null)i = !0; else switch (a) { case 'string': case 'number': i = !0; break; case 'object': switch (e.$$typeof) { case v: case b: i = !0; } } if (i) { let c; const l = e; var s = o(l); var i = r === '' ? K + re(l, 0) : r; return Array.isArray(s) ? (c = '', i != null && (c = `${ne(i)}/`), oe(s, t, c, '', e => e)) : s != null && (G(s) && (i = n + (!(c = s).key || l && l.key === s.key ? '' : `${ne(`${s.key}`)}/`) + i, s = X(c.type, i, c.ref, c._self, c._source, c._owner, c.props)), t.push(s)), 1; } let f = 0; const p = r === '' ? K : r + Z; if (Array.isArray(e)) for (let d = 0; d < e.length; d++)f += oe(u = e[d], t, n, p + re(u, d), o); else { s = g(e); if (typeof s === 'function') { r = e; s === r.entries && (ee || P('Using Maps as children is not supported. Use an array of keyed ReactElements instead.'), ee = !0); for (var y, m = s.call(r), h = 0; !(y = m.next()).done;)f += oe(u = y.value, t, n, p + re(u, h++), o); } else if (a == 'object') { a = `${e}`; throw Error(`Objects are not valid as a React child (found: ${a == '[object Object]' ? `object with keys {${Object.keys(e).join(', ')}}` : a}). If you meant to render a collection of children, use an array instead.`); } } return f; } function ae(e, t, n) { if (e == null) return e; const r = []; let o = 0; return oe(e, r, '', '', e => t.call(n, e, o++)), r; } const ue = -1; const ie = 0; const ce = 1; const le = 2; function se(n) { let e; let t; if (n._status === ue && (e = (0, n._result)(), (t = n)._status = ie, (t._result = e).then((e) => { let t; n._status === ie && (void 0 === (t = e.default) && O("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", e), (e = n)._status = ce, e._result = t); }, (e) => { let t; n._status === ie && ((t = n)._status = le, t._result = e); })), n._status === ce) return n._result; throw n._result; } const fe = !1; function pe(e) { return typeof e === 'string' || typeof e === 'function' || (!(e !== i.Fragment && e !== i.Profiler && e !== r && e !== i.StrictMode && e !== i.Suspense && e !== s && e !== o && !fe) || typeof e === 'object' && e !== null && (e.$$typeof === p || e.$$typeof === f || e.$$typeof === u || e.$$typeof === c || e.$$typeof === l || e.$$typeof === n || e.$$typeof === d || e[0] === t)); } function de() { const e = _.current; if (e === null) throw Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.'); return e; } let ye; let me; let he; let ve; let be; let ge; let _e; let we = 0; function ke() {}ke.__reactDisabledLog = !0; let Ce; const Re = j.ReactCurrentDispatcher; function Se(e) { if (void 0 === Ce) try { throw Error(); } catch (e) { const t = e.stack.trim().match(/\n( *(at )?)/); Ce = t && t[1] || ''; } return `\n${Ce}${e}`; } let je = !1; const Pe = new (typeof WeakMap === 'function' ? WeakMap : Map)(); function Oe(t, e) {
    if (!t || je) return ''; let n; let r = Pe.get(t); if (void 0 !== r) return r; je = !0; let o; let a = Error.prepareStackTrace; Error.prepareStackTrace = void 0, o = Re.current, Re.current = null, we === 0 && (ye = console.log, me = console.info, he = console.warn, ve = console.error, be = console.group, ge = console.groupCollapsed, _e = console.groupEnd, r = {
      configurable: !0, enumerable: !0, value: ke, writable: !0,
    }, Object.defineProperties(console, {
      info: r, log: r, warn: r, error: r, group: r, groupCollapsed: r, groupEnd: r,
    })), we++; try { if (e) { const u = function () { throw Error(); }; if (Object.defineProperty(u.prototype, 'props', {set() { throw Error(); }}), typeof Reflect === 'object' && Reflect.construct) { try { Reflect.construct(u, []); } catch (e) { n = e; }Reflect.construct(t, [], u); } else { try { u.call(); } catch (e) { n = e; }t.call(u.prototype); } } else { try { throw Error(); } catch (e) { n = e; }t(); } } catch (e) { if (e && n && typeof e.stack === 'string') { for (var i = e.stack.split('\n'), c = n.stack.split('\n'), l = i.length - 1, s = c.length - 1; l >= 1 && s >= 0 && i[l] !== c[s];)s--; for (;l >= 1 && s >= 0; l--, s--) if (i[l] !== c[s]) { if (l !== 1 || s !== 1) do { if (l--, --s < 0 || i[l] !== c[s]) { const f = `\n${i[l].replace(' at new ', ' at ')}`; return typeof t === 'function' && Pe.set(t, f), f; } } while (l >= 1 && s >= 0); break; } } } finally {
      je = !1, Re.current = o, --we === 0 && (o = {configurable: !0, enumerable: !0, writable: !0}, Object.defineProperties(console, {
        log: {...o, value: ye}, info: {...o, value: me}, warn: {...o, value: he}, error: {...o, value: ve}, group: {...o, value: be}, groupCollapsed: {...o, value: ge}, groupEnd: {...o, value: _e},
      })), we < 0 && O('disabledDepth fell below zero. This is a bug in React. Please file an issue.'), Error.prepareStackTrace = a;
    }a = t ? t.displayName || t.name : '', a = a ? Se(a) : ''; return typeof t === 'function' && Pe.set(t, a), a;
  } function xe(e) { return Oe(e, !1); } function Ee(e, t, n) { if (e == null) return ''; if (typeof e === 'function') return Oe(e, !(!(r = (r = e).prototype) || !r.isReactComponent)); let r; if (typeof e === 'string') return Se(e); switch (e) { case i.Suspense: return Se('Suspense'); case s: return Se('SuspenseList'); } if (typeof e === 'object') switch (e.$$typeof) { case l: return xe(e.render); case f: return Ee(e.type, t, n); case d: return xe(e._render); case p: var o = e._payload; var a = e._init; try { return Ee(a(o), t, n); } catch (e) {} } return ''; } let Te; const $e = {}; const Ie = j.ReactDebugCurrentFrame; function Fe(e) { let t; e ? (t = e._owner, t = Ee(e.type, e._source, t ? t.type : null), Ie.setExtraStackFrame(t)) : Ie.setExtraStackFrame(null); } function De(e) { let t; e ? (t = e._owner, R(Ee(e.type, e._source, t ? t.type : null))) : R(null); } function We() { if (w.current) { const e = L(w.current.type); if (e) return `\n\nCheck the render method of \`${e}\`.`; } return ''; } const Ae = {}; function Ne(e, t) { let n; e._store && !e._store.validated && e.key == null && (e._store.validated = !0, n = t, (t = We()) || (n = typeof n === 'string' ? n : n.displayName || n.name) && (t = `\n\nCheck the top-level render call using <${n}>.`), Ae[n = t] || (Ae[n] = !0, t = '', e && e._owner && e._owner !== w.current && (t = ` It was passed a child from ${L(e._owner.type)}.`), De(e), O('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', n, t), De(null))); } function Me(e, t) { if (typeof e === 'object') if (Array.isArray(e)) for (let n = 0; n < e.length; n++) { const r = e[n]; G(r) && Ne(r, t); } else if (G(e))e._store && (e._store.validated = !0); else if (e) { const o = g(e); if (typeof o === 'function' && o !== e.entries) for (var a, u = o.call(e); !(a = u.next()).done;)G(a.value) && Ne(a.value, t); } } function ze(e) { let t; let n; const r = e.type; if (r != null && typeof r !== 'string') { if (typeof r === 'function')t = r.propTypes; else { if (typeof r !== 'object' || r.$$typeof !== l && r.$$typeof !== f) return; t = r.propTypes; }t ? (n = L(r), (function (e, t, n, r, o) { let a; const u = Function.call.bind(Object.prototype.hasOwnProperty); for (a in e) if (u(e, a)) { let i = void 0; try { if (typeof e[a] !== 'function') { const c = Error(`${r || 'React class'}: ${n} type \`${a}\` is invalid; it must be a function, usually from the \`prop-types\` package, but received \`${typeof e[a]}\`.This often happens because of typos such as \`PropTypes.function\` instead of \`PropTypes.func\`.`); throw c.name = 'Invariant Violation', c; }i = e[a](t, a, r, n, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED'); } catch (e) { i = e; }!i || i instanceof Error || (Fe(o), O('%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).', r || 'React class', n, a, typeof i), Fe(null)), i instanceof Error && !(i.message in $e) && ($e[i.message] = !0, Fe(o), O('Failed %s type: %s', n, i.message), Fe(null)); } }(t, e.props, 'prop', n, e))) : void 0 === r.PropTypes || Te || (Te = !0, O('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', L(r) || 'Unknown')), typeof r.getDefaultProps !== 'function' || r.getDefaultProps.isReactClassApproved || O('getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.'); } } function Le(e, t, n) { let r; const o = pe(e); o || (a = '', (void 0 === e || typeof e === 'object' && e !== null && Object.keys(e).length === 0) && (a += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."), a += ((t = t) == null || void 0 === (t = t.__source) ? '' : `\n\nCheck your code at ${t.fileName.replace(/^.*[\\\/]/, '')}:${t.lineNumber}.`) || We(), e === null ? r = 'null' : Array.isArray(e) ? r = 'array' : void 0 !== e && e.$$typeof === v ? (r = `<${L(e.type) || 'Unknown'} />`, a = ' Did you accidentally export a JSX literal instead of a component?') : r = typeof e, O('React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', r, a)); var a = Q.apply(this, arguments); if (a == null) return a; if (o) for (let u = 2; u < arguments.length; u++)Me(arguments[u], e); return (e === i.Fragment ? function (e) { for (let t = Object.keys(e.props), n = 0; n < t.length; n++) { const r = t[n]; if (r !== 'children' && r !== 'key') { De(e), O('Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.', r), De(null); break; } }e.ref !== null && (De(e), O('Invalid attribute `ref` supplied to `React.Fragment`.'), De(null)); } : ze)(a), a; } let Ue = Te = !1; let qe; let Ve; let Ye; let Be; let He; let Je; let Xe; let Qe; let Ge; let Ke; let Ze; let et; let tt; let nt; let rt; let ot; let at; let ut; let it; let ct; const lt = !1; const st = !1; var M = typeof performance === 'object' && typeof performance.now === 'function'; function ft(e, t) { const n = e.length; e.push(t), (function (e, t, n) { let r = n; for (;;) { const o = r - 1 >>> 1; const a = e[o]; if (!(void 0 !== a && yt(a, t) > 0)) return; e[o] = t, e[r] = a, r = o; } }(e, t, n)); } function pt(e) { e = e[0]; return void 0 === e ? null : e; } function dt(e) { const t = e[0]; if (void 0 !== t) { const n = e.pop(); return n !== t && (e[0] = n, (function (e, t, n) { let r = n; const o = e.length; for (;r < o;) { const a = 2 * (r + 1) - 1; const u = e[a]; const i = 1 + a; const c = e[i]; if (void 0 !== u && yt(u, t) < 0)r = void 0 !== c && yt(c, u) < 0 ? (e[r] = c, e[i] = t, i) : (e[r] = u, e[a] = t, a); else { if (!(void 0 !== c && yt(c, t) < 0)) return; e[r] = c, e[i] = t, r = i; } } }(e, n, 0))), t; } } function yt(e, t) { const n = e.sortIndex - t.sortIndex; return n != 0 ? n : e.id - t.id; }Ye = M ? (Ve = performance, function () { return Ve.now(); }) : (Be = Date, He = Be.now(), function () { return Be.now() - He; }), typeof window === 'undefined' || typeof MessageChannel !== 'function' ? (Xe = Je = null, Qe = function () { if (Je !== null) try { const e = Ye(); Je(!0, e), Je = null; } catch (e) { throw setTimeout(Qe, 0), e; } }, Ge = function (e) { Je !== null ? setTimeout(Ge, 0, e) : (Je = e, setTimeout(Qe, 0)); }, Ke = function (e, t) { Xe = setTimeout(e, t); }, Ze = function () { clearTimeout(Xe); }, et = function () { return !1; }, Lt = qe = function () {}) : (tt = window.setTimeout, nt = window.clearTimeout, typeof console !== 'undefined' && (Pt = window.cancelAnimationFrame, typeof window.requestAnimationFrame !== 'function' && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), typeof Pt !== 'function' && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")), rt = !1, ot = null, at = -1, ut = 5, it = 0, et = function () { return Ye() >= it; }, Lt = function () {}, qe = function (e) { e < 0 || e > 125 ? console.error('forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported') : ut = e > 0 ? Math.floor(1e3 / e) : 5; }, Mt = new MessageChannel(), ct = Mt.port2, Mt.port1.onmessage = function () { if (ot !== null) { const e = Ye(); it = e + ut; try { ot(!0, e) ? ct.postMessage(null) : (rt = !1, ot = null); } catch (e) { throw ct.postMessage(null), e; } } else rt = !1; }, Ge = function (e) { ot = e, rt || (rt = !0, ct.postMessage(null)); }, Ke = function (e, t) { at = tt(() => { e(Ye()); }, t); }, Ze = function () { nt(at), at = -1; }); const mt = []; const ht = []; let vt = 1; let bt = null; let gt = 3; let _t = !1; let wt = !1; let kt = !1; function Ct(e) { for (let t = pt(ht); t !== null;) { if (t.callback === null)dt(ht); else { if (!(t.startTime <= e)) return; dt(ht), t.sortIndex = t.expirationTime, ft(mt, t); }t = pt(ht); } } function Rt(e) { let t; kt = !1, Ct(e), wt || (pt(mt) !== null ? (wt = !0, Ge(St)) : (t = pt(ht)) !== null && Ke(Rt, t.startTime - e)); } function St(e, t) { wt = !1, kt && (kt = !1, Ze()), _t = !0; const n = gt; try { if (!st) return jt(e, t); try { return jt(e, t); } catch (e) { throw bt !== null && (Ye(), bt.isQueued = !1), e; } } finally { bt = null, gt = n, _t = !1; } } function jt(e, t) { for (Ct(n = t), bt = pt(mt); bt !== null && !lt && (!(bt.expirationTime > n) || e && !et());) { var n; let r = bt.callback; typeof r === 'function' ? (bt.callback = null, gt = bt.priorityLevel, r = r(bt.expirationTime <= n), n = Ye(), typeof r === 'function' ? bt.callback = r : bt === pt(mt) && dt(mt), Ct(n)) : dt(mt), bt = pt(mt); } if (bt !== null) return !0; t = pt(ht); return t !== null && Ke(Rt, t.startTime - n), !1; } var Pt = Object.freeze({
    __proto__: null,
    unstable_ImmediatePriority: 1,
    unstable_UserBlockingPriority: 2,
    unstable_NormalPriority: 3,
    unstable_IdlePriority: 5,
    unstable_LowPriority: 4,
    unstable_runWithPriority(e, t) { switch (e) { case 1: case 2: case 3: case 4: case 5: break; default: e = 3; } const n = gt; gt = e; try { return t(); } finally { gt = n; } },
    unstable_next(e) { let t; switch (gt) { case 1: case 2: case 3: t = 3; break; default: t = gt; } const n = gt; gt = t; try { return e(); } finally { gt = n; } },
    unstable_scheduleCallback(e, t, n) {
      let r; const o = Ye(); switch (r = typeof n === 'object' && n !== null && typeof (r = n.delay) === 'number' && r > 0 ? o + r : o, e) { case 1: a = -1; break; case 2: a = 250; break; case 5: a = 1073741823; break; case 4: a = 1e4; break; case 3: default: a = 5e3; } var a = r + a; var e = {
        id: vt++, callback: t, priorityLevel: e, startTime: r, expirationTime: a, sortIndex: -1,
      }; return o < r ? (e.sortIndex = r, ft(ht, e), pt(mt) === null && e === pt(ht) && (kt ? Ze() : kt = !0, Ke(Rt, r - o))) : (e.sortIndex = a, ft(mt, e), wt || _t || (wt = !0, Ge(St))), e;
    },
    unstable_cancelCallback(e) { e.callback = null; },
    unstable_wrapCallback(t) { const n = gt; return function () { const e = gt; gt = n; try { return t.apply(this, arguments); } finally { gt = e; } }; },
    unstable_getCurrentPriorityLevel() { return gt; },
    get unstable_shouldYield() { return et; },
    unstable_requestPaint: Lt,
    unstable_continueExecution() { wt || _t || (wt = !0, Ge(St)); },
    unstable_pauseExecution() {},
    unstable_getFirstCallbackNode() { return pt(mt); },
    get unstable_now() { return Ye; },
    get unstable_forceFrameRate() { return qe; },
    unstable_Profiling: null,
  }); let Ot = 0; let xt = 0; let Et = null; let Tt = null; Et = {current: new Set()}, Tt = {current: null}; let $t = null; function It(t) { let n = !1; let r = null; if ($t.forEach((e) => { try { e.onInteractionTraced(t); } catch (e) { n || (n = !0, r = e); } }), n) throw r; } function Ft(t) { let n = !1; let r = null; if ($t.forEach((e) => { try { e.onInteractionScheduledWorkCompleted(t); } catch (e) { n || (n = !0, r = e); } }), n) throw r; } function Dt(t, n) { let r = !1; let o = null; if ($t.forEach((e) => { try { e.onWorkScheduled(t, n); } catch (e) { r || (r = !0, o = e); } }), r) throw o; } function Wt(t, n) { let r = !1; let o = null; if ($t.forEach((e) => { try { e.onWorkStarted(t, n); } catch (e) { r || (r = !0, o = e); } }), r) throw o; } function At(t, n) { let r = !1; let o = null; if ($t.forEach((e) => { try { e.onWorkStopped(t, n); } catch (e) { r || (r = !0, o = e); } }), r) throw o; } function Nt(t, n) { let r = !1; let o = null; if ($t.forEach((e) => { try { e.onWorkCanceled(t, n); } catch (e) { r || (r = !0, o = e); } }), r) throw o; }$t = new Set(); var Mt = {
    ReactCurrentDispatcher: _,
    ReactCurrentOwner: w,
    IsSomeRendererActing: S,
    ReactCurrentBatchConfig: e,
    assign: h,
    Scheduler: Pt,
    SchedulerTracing: Object.freeze({
      __proto__: null,
      get __interactionsRef() { return Et; },
      get __subscriberRef() { return Tt; },
      unstable_clear(e) { const t = Et.current; Et.current = new Set(); try { return e(); } finally { Et.current = t; } },
      unstable_getCurrent() { return Et.current; },
      unstable_getThreadID() { return ++xt; },
      unstable_trace(e, t, n) {
        const r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0; const o = {
          __count: 1, id: Ot++, name: e, timestamp: t,
        }; var t = Et.current; const a = new Set(t); a.add(o), Et.current = a; let u; const i = Tt.current; try { i !== null && i.onInteractionTraced(o); } finally { try { i !== null && i.onWorkStarted(a, r); } finally { try { u = n(); } finally { Et.current = t; try { i !== null && i.onWorkStopped(a, r); } finally { o.__count--, i !== null && o.__count === 0 && i.onInteractionScheduledWorkCompleted(o); } } } } return u;
      },
      unstable_wrap(n) { const r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const o = Et.current; let a = Tt.current; a !== null && a.onWorkScheduled(o, r), o.forEach((e) => { e.__count++; }); let u = !1; function e() { let e; const t = Et.current; Et.current = o, a = Tt.current; try { try { a !== null && a.onWorkStarted(o, r); } finally { try { e = n.apply(void 0, arguments); } finally { Et.current = t, a !== null && a.onWorkStopped(o, r); } } return e; } finally { u || (u = !0, o.forEach((e) => { e.__count--, a !== null && e.__count === 0 && a.onInteractionScheduledWorkCompleted(e); })); } } return e.cancel = function () { a = Tt.current; try { a !== null && a.onWorkCanceled(o, r); } finally { o.forEach((e) => { e.__count--, a && e.__count === 0 && a.onInteractionScheduledWorkCompleted(e); }); } }, e; },
      unstable_subscribe(e) {
        $t.add(e), $t.size === 1 && (Tt.current = {
          onInteractionScheduledWorkCompleted: Ft, onInteractionTraced: It, onWorkCanceled: Nt, onWorkScheduled: Dt, onWorkStarted: Wt, onWorkStopped: At,
        });
      },
      unstable_unsubscribe(e) { $t.delete(e), $t.size === 0 && (Tt.current = null); },
    }),
  }; Mt.ReactDebugCurrentFrame = k; try { const zt = Object.freeze({}); new Map([[zt, null]]), new Set([zt]); } catch (e) {} var Lt = Le; var S = function (e, t, n) { for (var r = function (e, t, n) { if (e == null) throw Error(`React.cloneElement(...): The argument must be a React element, but you passed ${e}.`); let r; let o; const a = {...e.props}; let u = e.key; let i = e.ref; const c = e._self; const l = e._source; let s = e._owner; if (t != null) for (r in H(t) && (i = t.ref, s = w.current), J(t) && (u = `${t.key}`), e.type && e.type.defaultProps && (o = e.type.defaultProps), t)Y.call(t, r) && !B.hasOwnProperty(r) && (void 0 === t[r] && void 0 !== o ? a[r] = o[r] : a[r] = t[r]); const f = arguments.length - 2; if (f == 1)a.children = n; else if (f > 1) { for (var p = Array(f), d = 0; d < f; d++)p[d] = arguments[d + 2]; a.children = p; } return X(e.type, u, i, c, l, s, a); }.apply(this, arguments), o = 2; o < arguments.length; o++)Me(arguments[o], r.type); return ze(r), r; }; var e = function (e) { const t = Le.bind(null, e); return t.type = e, Ue || (Ue = !0, P('React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.')), Object.defineProperty(t, 'type', {enumerable: !1, get() { return P('Factory.type is deprecated. Access the class directly before passing it to createFactory.'), Object.defineProperty(this, 'type', {value: e}), e; }}), t; }; var Pt = {
    map: ae, forEach(e, t, n) { ae(e, function () { t.apply(this, arguments); }, n); }, count(e) { let t = 0; return ae(e, () => { t++; }), t; }, toArray(e) { return ae(e, e => e) || []; }, only(e) { if (!G(e)) throw Error('React.Children.only expected to receive a single React element child.'); return e; },
  }; i.Children = Pt, i.Component = F, i.PureComponent = N, i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Mt, i.cloneElement = S, i.createContext = function (e, t) {
    void 0 === t ? t = null : t !== null && typeof t !== 'function' && O('createContext: Expected the optional second argument to be a function. Instead received: %s', t); const n = {
      $$typeof: c, _calculateChangedBits: t, _currentValue: e, _currentValue2: e, _threadCount: 0, Provider: null, Consumer: null,
    }; let r = !(n.Provider = {$$typeof: u, _context: n}); let o = !1; let a = !1; var e = {$$typeof: c, _context: n, _calculateChangedBits: n._calculateChangedBits}; return Object.defineProperties(e, {
      Provider: {get() { return o || (o = !0, O('Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?')), n.Provider; }, set(e) { n.Provider = e; }}, _currentValue: {get() { return n._currentValue; }, set(e) { n._currentValue = e; }}, _currentValue2: {get() { return n._currentValue2; }, set(e) { n._currentValue2 = e; }}, _threadCount: {get() { return n._threadCount; }, set(e) { n._threadCount = e; }}, Consumer: {get() { return r || (r = !0, O('Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?')), n.Consumer; }}, displayName: {get() { return n.displayName; }, set(e) { a || (P("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", e), a = !0); }},
    }), n.Consumer = e, n._currentRenderer = null, n._currentRenderer2 = null, n;
  }, i.createElement = Lt, i.createFactory = e, i.createRef = function () { const e = {current: null}; return Object.seal(e), e; }, i.forwardRef = function (t) {
    t != null && t.$$typeof === f ? O('forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).') : typeof t !== 'function' ? O('forwardRef requires a render function but was given %s.', t === null ? 'null' : typeof t) : t.length !== 0 && t.length !== 2 && O('forwardRef render functions accept exactly two parameters: props and ref. %s', t.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.'), t != null && (t.defaultProps == null && t.propTypes == null || O('forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?')); let n; const e = {$$typeof: l, render: t}; return Object.defineProperty(e, 'displayName', {
      enumerable: !1, configurable: !0, get() { return n; }, set(e) { n = e, t.displayName == null && (t.displayName = e); },
    }), e;
  }, i.isValidElement = G, i.lazy = function (e) { let t; let n; const r = {$$typeof: p, _payload: {_status: -1, _result: e}, _init: se}; return Object.defineProperties(r, {defaultProps: {configurable: !0, get() { return t; }, set(e) { O('React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.'), t = e, Object.defineProperty(r, 'defaultProps', {enumerable: !0}); }}, propTypes: {configurable: !0, get() { return n; }, set(e) { O('React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.'), n = e, Object.defineProperty(r, 'propTypes', {enumerable: !0}); }}}), r; }, i.memo = function (t, e) {
    pe(t) || O('memo: The first argument must be a component. Instead received: %s', t === null ? 'null' : typeof t); let n; var e = {$$typeof: f, type: t, compare: void 0 === e ? null : e}; return Object.defineProperty(e, 'displayName', {
      enumerable: !1, configurable: !0, get() { return n; }, set(e) { n = e, t.displayName == null && (t.displayName = e); },
    }), e;
  }, i.useCallback = function (e, t) { return de().useCallback(e, t); }, i.useContext = function (e, t) { let n; const r = de(); return void 0 !== t && O('useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s', t, typeof t === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks' : ''), void 0 !== e._context && ((n = e._context).Consumer === e ? O('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?') : n.Provider === e && O('Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?')), r.useContext(e, t); }, i.useDebugValue = function (e, t) { return de().useDebugValue(e, t); }, i.useEffect = function (e, t) { return de().useEffect(e, t); }, i.useImperativeHandle = function (e, t, n) { return de().useImperativeHandle(e, t, n); }, i.useLayoutEffect = function (e, t) { return de().useLayoutEffect(e, t); }, i.useMemo = function (e, t) { return de().useMemo(e, t); }, i.useReducer = function (e, t, n) { return de().useReducer(e, t, n); }, i.useRef = function (e) { return de().useRef(e); }, i.useState = function (e) { return de().useState(e); }, i.version = '17.0.2';
}));
